{"version":3,"sources":["common.js","component/MineField.js","component/Setting.js","App.js","index.js"],"names":["initStateArr","x","y","init","initArr","i","tempRow","j","push","setState","state","setFunc","arr","map","row","idx","MineField","props","loc","location","his","history","diff","cursor","func","amount","console","log","useState","stateArr","setStateArr","maxX","maxY","Math","floor","random","a","b","undefined","isNaN","initMapArr","mapArr","result","setResult","setNow","useEffect","cover","mine","mark","forEach","col","win","openFunc","isRecurse","burst","onClick","e","preventDefault","renderMine","rowState","ridx","className","cidx","type","onContextMenu","rightClick","data-value","data-cursor","data-size","window","reload","to","Setting","setDiff","children","setRow","setCol","amt","setAmt","parseInt","onChange","target","name","value","htmlFor","min","max","App","exact","path","pathname","mineFieldFunc","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bec162f6.chunk.js","sourcesContent":["export function initStateArr(x,y,init) {\r\n    let initArr = [];\r\n    for(let i = 0; i < y; i++){\r\n        let tempRow = [];\r\n        for(let j = 0; j < x; j++){\r\n            tempRow.push(init);\r\n        }\r\n        initArr.push(tempRow);\r\n    }\r\n    return initArr;\r\n}\r\n\r\nexport function initMapArr(maxX, maxY, amount) {\r\n    let initArr = initStateArr(maxX, maxY, 0);\r\n    for (let i = 0; i < amount; i++) {\r\n        let x = Math.floor(Math.random() * maxX);\r\n        let y = Math.floor(Math.random() * maxY);\r\n        while (initArr[y][x] == 'm') {\r\n            x = Math.floor(Math.random() * maxX);\r\n            y = Math.floor(Math.random() * maxY);\r\n        }\r\n        for (let a = -1; a <= 1; a++) {\r\n            for (let b = -1; b <= 1; b++) {\r\n                if(initArr[y+a] !== undefined && !isNaN(initArr[y+a][x+b])) {\r\n                    initArr[y+a][x+b] += 1;\r\n                }\r\n            }\r\n        }\r\n        initArr[y][x] = 'm';\r\n    }\r\n    return initArr;\r\n}\r\n\r\nexport function setState(x, y, state, setFunc, arr) {\r\n    setFunc(arr.map((row,idx) => {\r\n        if(idx == y) {\r\n            row[x] = state;\r\n        }\r\n        return row;\r\n    }));\r\n};","import './MineField.css';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { initMapArr, initStateArr, setState } from '../common.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function MineField(props) {\r\n    const {location : loc, history : his} = props;\r\n    const {diff, cursor, func} = loc.state;\r\n    const [x, y, amount] = diff;\r\n    console.log((x*y < 400 ? x*y / 4 : 100));\r\n    console.log(props);\r\n    if(!(amount > 0 && amount < (x*y < 400 ? x*y / 4 : 100))\r\n    || !(x > 8 && x < 101) \r\n    || !(y > 8 && y < 101)){\r\n        his.push('/');\r\n    }\r\n    // 최초 값 설정\r\n    const [stateArr, setStateArr] = useState(initStateArr(x, y, 'cover'));\r\n    const [mapArr] = useState(initMapArr(x, y, amount));\r\n    const [result, setResult] = useState('');\r\n    const [now, setNow] = useState([x*y, 0, 0]);\r\n    useEffect(() => {\r\n        let cover = 0;\r\n        let mine = 0;\r\n        let mark = 0;\r\n        stateArr.forEach((row) => {\r\n            row.forEach((col) => {\r\n                switch (col) {\r\n                    case 'cover':\r\n                        cover++;\r\n                        break;\r\n                    case 'm':\r\n                    case 'flag':\r\n                        mine++\r\n                        break;\r\n                    case 'mark':\r\n                        mark++;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n        setNow([cover,mine,mark]);\r\n        if(result !== 'burst' && cover +  mine == amount) win();\r\n    },[stateArr])\r\n    //, 'open', setStateArr, stateArr\r\n    const openFunc = (x, y, isRecurse = false) => {\r\n        if(mapArr[y] == undefined) return false;\r\n        if(stateArr[y][x] !== 'cover') return false;\r\n        switch (mapArr[y][x]) {\r\n            case undefined: break;\r\n            case 'm':\r\n                if(!isRecurse) {\r\n                    burst();\r\n                    setStateArr(mapArr);\r\n                }\r\n                break;\r\n            case 0:\r\n                setState(x, y, mapArr[y][x], setStateArr, stateArr);\r\n                for (let a = -1; a <= 1; a++) {\r\n                    for (let b = -1; b <= 1; b++) {\r\n                        openFunc(x+a, y+b, true);\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                setState(x, y, mapArr[y][x], setStateArr, stateArr);\r\n                break;\r\n        }\r\n    }\r\n    const onClick = (x, y, state, e) => {\r\n        e.preventDefault();\r\n        if(stateArr[y][x] !== 'cover' && stateArr[y][x] !== 'flag' && stateArr[y][x] !== 'mark') return false;\r\n        switch (state) {\r\n            case 'open':\r\n                openFunc(x, y);\r\n                break;\r\n            default:\r\n                setState(x, y, state, setStateArr, stateArr);\r\n                break;\r\n        }\r\n    }\r\n    const rightClick = (x, y, e) => {\r\n        e.preventDefault();\r\n        switch (stateArr[y][x]) {\r\n            case 'cover':\r\n                setState(x, y, 'flag', setStateArr, stateArr);\r\n                break;\r\n            case 'flag':\r\n                setState(x, y, 'mark', setStateArr, stateArr);\r\n                break;\r\n            case 'mark':\r\n                setState(x, y, 'cover', setStateArr, stateArr);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const burst = () => {\r\n        setResult('burst');\r\n        console.log('burst');\r\n    }\r\n    const win = () => {\r\n        setResult('win');\r\n        console.log('win');\r\n    }\r\n    const renderMine = stateArr.map((rowState,ridx) => (\r\n        <div className={'row-' + ridx} key={ridx}>\r\n            {rowState.map((state,cidx)=>(\r\n                <div className={'col-' + cidx} key={ridx + '-' + cidx}>\r\n                    <button type=\"button\" onClick={(e)=>onClick(cidx, ridx, cursor, e)} onContextMenu={(e)=>{rightClick(cidx, ridx, e)}} data-value={state}>\r\n                        <span>{stateArr[ridx][cidx]}</span>\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"mine-field\" data-cursor={cursor} data-size={x > 60 ? 'xl' : x > 40 ? 'l' : x > 20 ? 'm' : 's'}>\r\n            {renderMine}\r\n            <div className={\"result \" + result}>\r\n                <div>\r\n                    <span>{result == 'burst' ? 'You Burst' : 'You Win!'}</span>\r\n                    <span>\r\n                        <button type=\"button\" onClick={()=> window.location.reload()}>{result == 'burst' ? 'Retry' : 'new game'}</button>\r\n                        <Link to=\"/\"><button type=\"button\">Go Home</button></Link>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './Setting.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport default function Setting({diff, setDiff, children}) {\r\n    let [row, setRow] = useState(diff[0]);\r\n    let [col, setCol] = useState(diff[1]);\r\n    let [amt, setAmt] = useState(diff[2]);\r\n    useEffect(() => {\r\n        setDiff([parseInt(row), parseInt(col), parseInt(amt)]);\r\n    },[row, col, amt])\r\n    const onChange = (e) => {\r\n        switch (e.target.name) {\r\n            case 'row':\r\n                setRow(e.target.value);\r\n                break;\r\n            case 'col':\r\n                setCol(e.target.value);\r\n                break;\r\n            case 'amt':\r\n                setAmt(e.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"setting\">\r\n            <div className=\"diffForm\">\r\n                <div>\r\n                    <label htmlFor=\"row\">가로 개수(9~100)</label>\r\n                    <input name=\"row\" type=\"number\" min=\"9\" max=\"100\" value={row} onChange={onChange} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"col\">세로 개수(9~100)</label>\r\n                    <input name=\"col\" type=\"number\" min=\"9\" max=\"100\" value={col} onChange={onChange} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"amt\">지뢰 개수({'1~' + (row*col < 400 ? parseInt(row*col / 4) : 100)})</label>\r\n                    <input name=\"amt\" type=\"number\" min=\"1\" max={row*col < 400 ? row*col / 4 : 100} value={amt} onChange={onChange} />\r\n                </div>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MineField from './component/MineField';\nimport Setting from './component/Setting';\n\n\nfunction App() {\n  const [diff, setDiff] = useState([10,10,10])\n  const [now, setNow] = useState([])\n  function mineFieldFunc(func, arg = {}) {\n    switch (func) {\n      case 'change':\n        \n        break;\n    \n      default:\n        break;\n    }\n  }\n  return (\n    <div className=\"mine-sweeper\">\n      <Router>\n        <header className=\"header\">\n          \n        </header>\n        <div className=\"container\">\n          <Route exact path=\"/\">\n            <Setting diff={diff} setDiff={setDiff}>\n              <Link to={{\n                pathname: \"/game\",\n                state: {diff: diff, cursor: \"open\", func: mineFieldFunc()}\n              }}>게임시작</Link>\n            </Setting>\n          </Route>\n          <Route path=\"/game\" component={MineField} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}